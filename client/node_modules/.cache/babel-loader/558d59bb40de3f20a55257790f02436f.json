{"ast":null,"code":"import jsTPS_Transaction from \"../common/jsTPS.js\";\n/**\n * MoveSong_Transaction\n * \n * This class represents a transaction that works with adding songs. It will be managed by the transaction stack.\n * \n * @author Victor Dai\n */\n\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n  constructor(store) {\n    super();\n    this.store = store;\n  }\n\n  doTransaction() {\n    this.store.addSong();\n  }\n\n  undoTransaction() {\n    this.store.currentList.songs.pop();\n    this.store.updatePlaylist();\n  }\n\n}","map":{"version":3,"names":["jsTPS_Transaction","AddSong_Transaction","constructor","store","doTransaction","addSong","undoTransaction","currentList","songs","pop","updatePlaylist"],"sources":["/Users/victordai/Desktop/CSE 316 HW3/Playlister_HW3/client/src/transactions/AddSongTransaction.js"],"sourcesContent":["import jsTPS_Transaction from \"../common/jsTPS.js\"\n\n/**\n * MoveSong_Transaction\n * \n * This class represents a transaction that works with adding songs. It will be managed by the transaction stack.\n * \n * @author Victor Dai\n */\nexport default class AddSong_Transaction extends jsTPS_Transaction {\n    constructor(store) {\n        super();\n        this.store = store;\n    }\n\n    doTransaction() {\n        this.store.addSong();\n    }\n    \n    undoTransaction() {\n        this.store.currentList.songs.pop();\n        this.store.updatePlaylist();\n    }\n}"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,oBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,mBAAN,SAAkCD,iBAAlC,CAAoD;EAC/DE,WAAW,CAACC,KAAD,EAAQ;IACf;IACA,KAAKA,KAAL,GAAaA,KAAb;EACH;;EAEDC,aAAa,GAAG;IACZ,KAAKD,KAAL,CAAWE,OAAX;EACH;;EAEDC,eAAe,GAAG;IACd,KAAKH,KAAL,CAAWI,WAAX,CAAuBC,KAAvB,CAA6BC,GAA7B;IACA,KAAKN,KAAL,CAAWO,cAAX;EACH;;AAb8D"},"metadata":{},"sourceType":"module"}